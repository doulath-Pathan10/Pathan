import { getUrl } from '../../utils/common/change.utils';
import { KeyWithAnyModel, ValidationObjModel } from '../../utils/model/common-model';
import rulesUtils from './rules.utils';
 
const Rules_bd_3 = (props: KeyWithAnyModel, stageInfo: KeyWithAnyModel): KeyWithAnyModel => {
    const validationObj: ValidationObjModel = {
        nonEditable: [],
        hidden: [],
        modifyVisibility:[]
    };
    let nonEditableFields: Array<string> = [];
    let hiddenFields: Array<string> = [];
    let defaultVisiblity:any= [];
    let filteredFields:any = [];
    filteredFields.push(props[0].filter((fields:any)=> fields.field_set_name === "Employment Details"));
    const filteredOfficeAddressDetails = props[0].filter((fields:any)=> fields.field_set_name === "Office Address (Optional)");
    /*istanbul ignore else*/
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Office Address (Optional)", fields: filteredOfficeAddressDetails[0].fields});
    }
    const filteredExistingContactDetails = props[0].filter((fields:any)=> fields.field_set_name === "Existing Contact Details");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Existing Contact Details", fields: filteredExistingContactDetails[0].fields});
      defaultVisiblity.push("existing_personal_email_co1", "existing_office_email_em1", "existing_office_email_em2", "existing_mobile_mo1", "existing_mobile_mo2", 
      "existing_overseas_mobile_mf1", "existing_overseas_mobile_mf2", "existing_office_telephone_ot1", "existing_office_telephone_ot2",
      "existing_residential_telephone_rt2", "existing_overseas_office_telno_of1", "existing_overseas_office_telno_of2", "existing_overseas_residential_telno_rf1",
      "existing_overseas_residential_telno_rf2");
    }
    const filteredAdditionalContactDetails = props[0].filter((fields:any)=> fields.field_set_name === "Additional Contact Details");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Additional Contact Details", fields: filteredAdditionalContactDetails[0].fields});
      defaultVisiblity.push("per_email_2", "office_email_1", "office_email_2", "mobile_1", "mobile_2", "overseas_mobile1_contact_no", 
      "overseas_mobile2_contact_no", "office_phone1_number", "office_phone2_number", "ohph1_number", "ohph2_number", "ofc1_number", "ofc2_number",
      "home_phone2_number");
    }
    const filteredPreferedContactForEachClasification = props[0].filter((fields:any)=> fields.field_set_name === "Prefered Contact For Each Clasification");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Prefered Contact For Each Clasification", fields: filteredPreferedContactForEachClasification[0].fields});
    }
    const filteredSelectPrimaryContactunderMobilePhone = props[0].filter((fields:any)=> fields.field_set_name === "Select Primary Contact under Mobile Phone");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Select Primary Contact under Mobile Phone", fields: filteredSelectPrimaryContactunderMobilePhone[0].fields});
    }
    const filteredSelectPrimaryContactunderemail = props[0].filter((fields:any)=> fields.field_set_name === "Select Primary Contact under email");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Select Primary Contact under email", fields: filteredSelectPrimaryContactunderemail[0].fields});
    }
    if(filteredFields[0].length > 0 && getUrl.getJourneyType()==="NTC" && stageInfo.products[0].product_category === 'CA'
     /*istanbul ignore else */ 
    // && (stageInfo.products[0].product_type === "317" || stageInfo.products[0].product_type === "314")
    ){
      const filteredSelectPrimaryContactunderResidentialTelephoneNo = props[0].filter((fields:any)=> fields.field_set_name === "Select Primary Contact under Residential Telephone No.");
      filteredFields[0].push({field_set_name: "Select Primary Contact under Residential Telephone No.", fields: filteredSelectPrimaryContactunderResidentialTelephoneNo[0].fields});
      const filteredSelectPrimaryContactContactunderOfficeNo = props[0].filter((fields:any)=> fields.field_set_name === "Select Primary Contact under Office No.");
      filteredFields[0].push({field_set_name: "Select Primary Contact under Office No.", fields: filteredSelectPrimaryContactContactunderOfficeNo[0].fields});
    }
    
    const filteredForInternalUse = props[0].filter((fields:any)=> fields.field_set_name === "For Internal Use");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "For Internal Use", fields: filteredForInternalUse[0].fields});
      defaultVisiblity.push("sourcing_id_2", "sales_id_2", "referral_id_2", "closing_id_2");
    }
    const filteredOriginalSighted = props[0].filter((fields:any)=> fields.field_set_name === "Original Sighted");
     /*istanbul ignore else */
    if(filteredFields[0].length > 0 && filteredOriginalSighted.length>0){
      filteredFields[0].push({field_set_name: "Original Sighted", fields: filteredOriginalSighted[0].fields});
    }
    /*istanbul ignore else */
    if((stageInfo.products[0].product_category === "CC" || stageInfo.products[0].product_category === "PL")){
        /*istanbul ignore else */
        if(stageInfo.application.journey_type ||getUrl.getJourneyType()  === 'NTC'){
            /*istanbul ignore else */
            // if(!stageInfo.applicants["year_of_assessment_fff_1_a_1"]){
            //     hiddenFields.push("year_of_assessment_fff_1");
            // }
            // /*istanbul ignore else */
            // if(!stageInfo.applicants["annual_income_fff_1_a_1"]){
            //     hiddenFields.push("annual_income_fff_1");
            // }
             defaultVisiblity.push("year_of_assessment_fff_1","year_of_assessment_fff_2","annual_income_fff_1","annual_income_fff_2")
            // validationObj.modifyVisibility!.push(defaultVisiblity)
            nonEditableFields.push("annual_income_fff_1","year_of_assessment_fff_1","residential_address");
       }
    }
     /*istanbul ignore else */
    // if (getUrl.getJourneyType() === "ETC") {
    //     hiddenFields.push("work_type","name_of_employer","name_of_employer_other","name_of_business","job_title","embossed_name","residential_address","office_phone_number");
    // }
    /*istanbul ignore else */
    if (getUrl.getJourneyType() === "ECC") {
        const filteredCreditCardDetails = props[0].filter((fields:any)=> fields.field_set_name === 'Credit Card Details');
        filteredFields[0].unshift({field_set_name: 'Credit Card Details', fields: filteredCreditCardDetails[0].fields});
    }
    else{
        if(stageInfo.products[0].product_category  === "SA"){
           hiddenFields.push("credit_limit_consent","myinfo_data_cli", "ofc_postal_other_code", "ofc_city", "ofc_state", "signature_crop_from_existing_ac", "existing_account_ccy", "existing_account_no");
        }
        /*istanbul ignore else */
        if(stageInfo.products[0].product_category  === "PL" || stageInfo.products[0].product_category === "CC"){
            // if(stageInfo.application.journey_type !== 'NTC'){
            //     hiddenFields.push("annual_income_fff_1","year_of_assessment_fff_1","ownership_status","residential_address");
            // }
            defaultVisiblity.push("year_of_assessment_fff_2","annual_income_fff_2")
            //validationObj.modifyVisibility!.push(defaultVisiblity)
      }
    }
    hiddenFields.push("ofc_postal_other_code", "ofc_city", "ofc_state");
    validationObj.modifyVisibility!.push(defaultVisiblity)
    validationObj.nonEditable.push(nonEditableFields);
    validationObj.hidden!.push(hiddenFields);
    return rulesUtils(filteredFields, validationObj);
}
 
export default Rules_bd_3;
 
Please write test cases using jest with RTL
