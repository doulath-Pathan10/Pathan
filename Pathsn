import React from 'react';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom'; 
import "./flowSelection.scss";
import PopupModel from '../../../shared/components/popup-model/popup-model';
import MyinfoSingpassLogin from '../../../shared/components/myinfo-singpass-login-modal/myinfo-singpass-login';

const FlowSelection = () => {
    const navigate = useNavigate(); 
    const [displayPopup, setDisplayPopup] = React.useState(false);

    const handleRouteToUrl1 = () => {
      setDisplayPopup(true)
  };

  const handleRouteToUrl2 = () => {
    navigate("onboarding/sgb/ngf-apply.html?products=334&campaign=CA001"); 
};

    const AccordianItem = ({title,content,isOpen,onToggle}:{title:string;content:string;isOpen:boolean;onToggle:()=>void})=>{
        
        return(
            <div className='accordian-item'>
                <button onClick={onToggle} className="accordion-title">
                  {title}
                </button>
                {isOpen &&<p className="accordion-content">{content}</p>}
            </div>
        );
    };
    const [openIndex,setOpenIndex] = useState<number| null>(null);
    const  handleToggle =(index:number) =>{
        setOpenIndex((prevIndex)=>(prevIndex === index?null:index))
    }
    const accordianData =[
        {
            title:"What's Myinfo",
            content:"By clicking “Retrieve MyInfo”, you will be re-directed to the MyInfo portal, which is not owned or controlled by Standard Chartered Bank Limited or any member of the Standard Chartered Group (the”Bank”). The Bank bears no liability or responsibility over your usage of the MyInfo portal. *Please note that MyInfo is temporaily"
        },
        {
            title:"How do i use Myinfo?",
            content:"By clicking “Retrieve MyInfo”, you will be re-directed to the MyInfo portal, which is not owned or controlled by Standard Chartered Bank Limited or any member of the Standard Chartered Group (the”Bank”). The Bank bears no liability or responsibility over your usage of the MyInfo portal. *Please note that MyInfo is temporaily"
        },
        {
            title:"Why should I use Myinfo?",
            content:"By clicking “Retrieve MyInfo”, you will be re-directed to the MyInfo portal, which is not owned or controlled by Standard Chartered Bank Limited or any member of the Standard Chartered Group (the”Bank”). The Bank bears no liability or responsibility over your usage of the MyInfo portal. *Please note that MyInfo is temporaily"
        },

    ]
   const [showMore,setShowMore] = useState(false)
   const updateShowMore =()=>{
    setShowMore(!showMore)
   }
   
   
   return (
        <>
           <div className=" container-fluid grid1">

<div className="row column01">

   <div className="column">
   <div className="column3">
  <div className="col-3-0">
      <div className="col-3-3">
        <img className="img1" src={require("../../../assets/_images/my-info-logo@2x.png")} alt=''/>
      </div>
      <div className="col-3-4">
    <h5>If you are a SingPass Holder, you can</h5>
     <img className="img2" src={require("../../../assets/_images/description@2x.png")} alt=''/>
           <p className="gry">No documents upload required.</p>
           </div>
  </div>
      <div className="col-3-2">
      
  {/* <button className="button2" >Proceed with QR code</button> */}
     {!displayPopup?
                <>
                   <button className="button1" style={{border:"1px solid #00a546"}}  onClick={handleRouteToUrl1}>Use MyInfo (using SingPass)</button>
                    <button className="button2" onClick={handleRouteToUrl2}>Proceed without MyInfo</button>
 
                    {/* <Accordion items={accordionData} /> */}
 
                   </>
                  :
                <PopupModel displayPopup={true}>
                <MyinfoSingpassLogin />
                </PopupModel>
                }
  </div>
</div>
</div>
</div>
<div className="row column02">
   <div className="column2-1">
<div className='accordion-wrapper'>
{
                        accordianData.map((item,index)=>(
                           <AccordianItem
                           key={index}
                           title={item.title}
                           content={item.content}
                           isOpen={openIndex ===index}
                           onToggle={()=>handleToggle(index)}/>
                        ))
                      }
                       
</div>

</div>
</div>
  <div className="row column03">

   <div className="column">
   <div className="column4">
      <div className="col-4-2">
    <p>By clicking “Retrieve MyInfo”, you will be re-directed to the MyInfo portal, which is not owned or controlled by Standard Chartered Bank Limited or any member of the Standard Chartered Group (the”Bank”). The Bank bears no liability or responsibility over your usage of the MyInfo portal.
<span>*Please note that MyInfo is temporaily</span></p>
  </div>
</div>
</div>
</div>
    <div className="row column04">
        {showMore&&
 <p id="textArea">
 By clicking “Retrieve MyInfo”, you will be re-directed to the MyInfo portal, which is not owned or controlled by Standard Chartered Bank Limited or any member of the Standard Chartered Group (the”Bank”). The Bank bears no liability or responsibility over your usage of the MyInfo portal.
 </p>}
<a onClick={updateShowMore} id="toggleButton"  href="javascript:void(0);">{showMore?"See Less":"See More"}</a>
       </div>
      <div className="col-6-1">
    <a href=""><img className='img3' src={require("../../../assets/_images/group-2@2x.png")} /></a>
  </div>
</div>
        </>
    );
};

export default FlowSelection;

please write an test case using jest and RTL
