import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import FlowSelection from './FlowSelection';
import { MemoryRouter } from 'react-router-dom';

describe('FlowSelection Component', () => {
  beforeEach(() => {
    render(
      <MemoryRouter>
        <FlowSelection />
      </MemoryRouter>
    );
  });

  test('renders the component without crashing', () => {
    expect(screen.getByText(/If you are a SingPass Holder/i)).toBeInTheDocument();
  });

  test('displays the MyInfo logo', () => {
    const myInfoLogo = screen.getByAltText('');
    expect(myInfoLogo).toBeInTheDocument();
  });

  test('shows both action buttons initially', () => {
    expect(screen.getByText('Use MyInfo (using SingPass)')).toBeInTheDocument();
    expect(screen.getByText('Proceed without MyInfo')).toBeInTheDocument();
  });

  test('displays accordion items with correct titles', () => {
    expect(screen.getByText("What's Myinfo")).toBeInTheDocument();
    expect(screen.getByText('How do i use Myinfo?')).toBeInTheDocument();
    expect(screen.getByText('Why should I use Myinfo?')).toBeInTheDocument();
  });

  test('accordion items can be toggled', () => {
    const firstAccordion = screen.getByText("What's Myinfo");
    fireEvent.click(firstAccordion);
    
    // Check if content is displayed
    expect(screen.getByText(/By clicking "Retrieve MyInfo"/i)).toBeInTheDocument();
    
    // Click again to close
    fireEvent.click(firstAccordion);
    expect(screen.queryByText(/By clicking "Retrieve MyInfo"/i)).not.toBeInTheDocument();
  });

  test('"See More" link toggles additional content', () => {
    const seeMoreLink = screen.getByText('See More');
    fireEvent.click(seeMoreLink);
    expect(screen.getByText(/See Less/i)).toBeInTheDocument();
    
    fireEvent.click(seeMoreLink);
    expect(screen.getByText(/See More/i)).toBeInTheDocument();
  });

  test('clicking "Use MyInfo" button opens the popup', () => {
    const myInfoButton = screen.getByText('Use MyInfo (using SingPass)');
    fireEvent.click(myInfoButton);
    
    // Assuming the popup has some distinctive text
    // You might need to mock the PopupModel and MyinfoSingpassLogin components
    // for this to work properly in isolation
  });

  test('clicking "Proceed without MyInfo" button navigates to correct URL', () => {
    const proceedButton = screen.getByText('Proceed without MyInfo');
    fireEvent.click(proceedButton);
    
    // In a real test, you would check navigation
    // This would require additional setup with react-router testing
  });

  test('displays footer content', () => {
    expect(screen.getByText(/By clicking "Retrieve MyInfo"/i)).toBeInTheDocument();
  });

  test('displays the bottom image link', () => {
    const bottomImage = screen.getByAltText('');
    expect(bottomImage).toBeInTheDocument();
  });
});
