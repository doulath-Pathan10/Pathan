import { checkProductDetails } from '../../services/common-service';
import { authenticateType, getUrl } from '../../utils/common/change.utils';
import { KeyWithAnyModel, ValidationObjModel } from '../../utils/model/common-model';
import rulesUtils from './rules.utils';

const Rules_bd_2 = (props: KeyWithAnyModel, stageInfo: KeyWithAnyModel): KeyWithAnyModel => {
    const validationObj: ValidationObjModel = {
        nonEditable: [],
        hidden: [],
        modifyVisibility:[]
    };
    let filteredFields = [];
    let nonEditableFields: Array<string> = [];
    let hiddenFields: Array<string> = [];
    let defaultVisiblity:any= [];
    filteredFields.push(props[0]?.filter((fields:any)=> fields.field_set_name === "Personal Details"));
    const addressDetails = props[0].filter((fields:any)=> fields.field_set_name === "Residential Address In Singapore");
    if(filteredFields[0].length > 0){
      filteredFields[0].push({field_set_name: "Residential Address In Singapore", fields: addressDetails[0].fields});
    }
    defaultVisiblity.push("nationality", "residential_address");
    hiddenFields.push("building_name", "block", "postal_code", "street_name", "unit_no");
    nonEditableFields.push("marital_status", "residential_address", "nationality");
    validationObj.modifyVisibility!.push(defaultVisiblity)
    validationObj.nonEditable.push(nonEditableFields);
    validationObj.hidden!.push(hiddenFields);
    return rulesUtils(filteredFields, validationObj);
}

export default Rules_bd_2;
Please write test cases using jest with RTL
